import os
import logging

from aiogram import Router, types
from aiogram.filters import CommandStart, Command

from utils.user_state import UserState, user_states
from utils.keyboards import get_main_menu_keyboard
from config import ALLOWED_USER_ID, MAX_MEDIA_FILES, MAX_TEXT_LENGTH

router = Router()


async def check_access(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_id == ALLOWED_USER_ID


async def get_user_state(user_id: int) -> UserState:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_states:
        user_states[user_id] = UserState()
    return user_states[user_id]


@router.message(CommandStart())
async def start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id

    if not await check_access(user_id):
        await message.reply("üö´ –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    state = await get_user_state(user_id)

    welcome_text = (
        "üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Social Media Publisher!**\n\n"
        "üì± –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Telegram –∏ X.com\n"
        "üñºÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ\n"
        "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π\n"
        "‚öôÔ∏è –ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n\n"
        "üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    keyboard = get_main_menu_keyboard(state)
    sent_message = await message.reply(
        welcome_text, reply_markup=keyboard, parse_mode="Markdown"
    )
    state.menu_message_id = sent_message.message_id


@router.message(Command("help"))
async def help_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = message.from_user.id

    if not await check_access(user_id):
        await message.reply("üö´ –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    help_text = (
        "‚ùì **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:**\n\n"
        "üîß **–ö–æ–º–∞–Ω–¥—ã:**\n"
        "‚Ä¢ `/start` - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "‚Ä¢ `/help` - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏\n"
        "‚Ä¢ `/clear` - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë\n"
        "‚Ä¢ `/status` - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å\n\n"
        "üì± **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram –∏ X.com\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π\n"
        "‚Ä¢ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "‚Ä¢ –í—ã–±–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n\n"
        "‚ö†Ô∏è **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**\n"
        f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º {MAX_MEDIA_FILES} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤\n"
        f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ JPG –∏ MP4 —Ñ–∞–π–ª—ã"
    )

    await message.reply(help_text, parse_mode="Markdown")


@router.message(Command("clear"))
async def clear_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /clear"""
    user_id = message.from_user.id

    if not await check_access(user_id):
        await message.reply("üö´ –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    state = await get_user_state(user_id)

    for file in state.media_files:
        if os.path.exists(file):
            try:
                os.remove(file)
                logging.debug(f"–£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª: {file}")
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file}: {e}")

    user_states[user_id] = UserState()
    await message.reply("üóëÔ∏è –°–µ—Å—Å–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞.")

