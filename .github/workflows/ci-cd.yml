name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push bot image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/social-media-bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy via SSH and docker-compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            if [ ! -d ~/social-media-bot ]; then
              git clone https://github.com/${{ github.repository }} ~/social-media-bot
            fi

            cd ~/social-media-bot
            git pull origin master

            export TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            export TELEGRAM_GROUP_ID=${{ secrets.TELEGRAM_GROUP_ID }}
            export X_API_KEY=${{ secrets.X_API_KEY }}
            export X_API_SECRET=${{ secrets.X_API_SECRET }}
            export X_ACCESS_TOKEN=${{ secrets.X_ACCESS_TOKEN }}
            export X_ACCESS_TOKEN_SECRET=${{ secrets.X_ACCESS_TOKEN_SECRET }}
            export ALLOWED_USER_ID=${{ secrets.ALLOWED_USER_ID }}
            export TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}
            export TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}

            docker-compose down
            docker-compose up -d --force-recreate --pull always

            docker image prune -f